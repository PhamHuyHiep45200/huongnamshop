// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StatusOrder {
  INPROGRESS
  CANCLE
  RECEIVED
  PAID
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String   @id @default(uuid())
  name      String
  phone     String
  email     String
  role      Role
  password  String
  thumnail  String
  deleteFlg Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(uuid())
  name        String
  thumbnail   String
  outOfStock  String
  description String
  price       Int
  categoryId  Int
  deleteFlg   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // CategoryMoto Category @relation(fields: [categoryId], references: [id])
}

// model Order {
//   id                String  @id @default(uuid())
//   rentalStartDate   DateTime
//   leaseEndDate      DateTime
//   receivingAddress  String
//   giveCarAddress    String
//   depositPrice      Int
//   statusOrder       StatusOrder
//   allMoney          Int
//   idCard            String
//   idMoto            Int
//   idUserReceiver    Int
//   star              Int
//   comment           String
//   deleteFlg         Boolean
//   createdAt         DateTime    @default(now())
//   updatedAt         DateTime    @updatedAt
//   UserReceiverOrder User        @relation(fields: [idUserReceiver], references: [id])
//   motoOrder         Moto        @relation(fields: [idMoto], references: [id])
//   userId            Int?
// }

model Notify {
  id        String   @id @default(uuid())
  content   String
  read      Boolean
  idOrder   String
  deleteFlg Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int?
}

model Message {
  id              String   @id @default(uuid())
  idPersonSend    String
  idPersonReceive String
  message         String
  deleteFlg       Boolean
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  // personSend      User     @relation("user_send", fields: [idPersonSend], references: [id])
  // personReceive   User     @relation("user_recipient", fields: [idPersonReceive], references: [id])
}

model Category {
  id        String   @id @default(uuid())
  name      String
  thumnail  String
  deleteFlg Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Product   Product[]
}

model Adress {
  id          String   @id @default(uuid())
  idUser      Int
  commune     String
  village     String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Banner {
  id        String   @id @default(uuid())
  thumbnail String
  link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
